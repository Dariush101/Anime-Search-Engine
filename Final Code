# All Anime Genres
genres = ['Action', 'Adventure', 'Comedy', 'Drama', 'Fantasy', 'Romance', 'Slice of life', 
          'Supernatural', 'Horror', 'Mystery', 'Sci-Fi', 'Mecha', 'Sports', 'Shonen', 
          'Shojo', 'Isekai', 'Harem', 'Reverse Harem', 'Tragedy', 'Game']



# User Input (commented out for testing)
name = input("Hello! Welcome to the Anime Search Engine. My duty is to help you find an anime suited for your liking. Before we start, may I please know your name? \n")

name = name.capitalize()

ageOfUser = int(input(f"Well it's nice to meet you {name}. Before we start, we need to ask one more question. How old are you?\n"))





class AnimeToGenre:
  def __init__(self, name, age, gen, genre):
    self.name = name
    self.age = age
    self.gen = gen
    self.genre = genre


# Display all genres
for x, genre in enumerate(genres, 1):  # Use 'genre' instead of overwriting 'genres'
    print(f"{x}. {genre}")



chosen_genre1 = int(input("Choose your first favorite genre that enjoy the most (by number): "))
#chosen_genre2 = int(input("Choose your second favorite genre that enjoy the most (by number, ): "))
#chosen_genre3 = int(input("Choose your third favorite genre that enjoy the most (by number, ): "))


print("1: New\n2: Old")

chosen_gen = int(input("Do you like New Generation of anime or Old Generation: "))


# Action Anime Instances
anime_objects = [


    AnimeToGenre("JJK", 17, 1, 1),
    AnimeToGenre("Chainsaw Man", 17, 1, 1),
    AnimeToGenre("One Punch Man", 17, 2, 1),
    AnimeToGenre("Attack on Titan", 19, 1, 1),
    AnimeToGenre("Bleach", 17, 2, 1),
    AnimeToGenre("Demon Slayer", 17, 1, 1),
    AnimeToGenre("Jojo", 17, 1, 1),
    AnimeToGenre("Dragon Ball", 17, 2, 1),
    AnimeToGenre("Dragon Ball Z", 17, 2, 1),
    AnimeToGenre("Dragon Ball GT", 17, 2, 1),
    AnimeToGenre("Dragon Ball Super", 17, 1, 1),
    AnimeToGenre("Dragon Ball Daima", 17, 1, 1),
    AnimeToGenre("Naruto", 17, 2, 1),
    AnimeToGenre("Boruto", 17, 1, 1),
    AnimeToGenre("One Piece", 17, 2, 1),
    AnimeToGenre("Vinland Saga", 17, 1, 1),
    AnimeToGenre("Black Clover", 17, 1, 1),
    AnimeToGenre("Hunter x Hunter", 17, 2, 1),
    AnimeToGenre("Mobile Gundam", 17, 2, 1),
    AnimeToGenre("Gurren Lagann", 17, 1, 1),
    AnimeToGenre("Kill la Kill", 19, 2, 1),
    AnimeToGenre("Cyberpunk Edgerunners", 17, 1, 1),
    AnimeToGenre("Sword Art Online", 17, 2, 1),
    AnimeToGenre("Quintessential Quintuplets", 17, 1, 6)

]



# List Example
action = []
romance = []


for show in anime_objects: 

# is the user old enough (above 18)
     
    if show.age < ageOfUser:

        if show.age <= 19:

            # what genre does the user like (action)
    
            if show.genre == chosen_genre1:

                # What generation does the user like (new gen)

                if show.gen == chosen_gen:
               
                    action.append((show.name))

                # What generation does the user like (old gen)

                if show.gen == chosen_gen:
               
                    action.append((show.name))

    if show.age > ageOfUser:

        if show.age == 17:

            # what genre does the user like (action)

            if show.genre == chosen_genre1:

                # What generation does the user like (new gen)

                if show.gen == chosen_gen:
               
                    action.append((show.name))

                # What generation does the user like (old gen)

                if show.gen == chosen_gen:
               
                    action.append((show.name))





action=list(dict.fromkeys(action))

action = list(action)

action = sorted(action)

print(action)
